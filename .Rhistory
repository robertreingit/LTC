up = qnorm(1-alpha/2, mu_s, s_e)) %>%
dplyr::mutate(inside = dplyr::if_else(mu_s >= c_i[1] & mu_s <= c_i[2], 'yes', 'no'))
ggplot(df, aes(x = mu_s, y = mu_s, ymin = lu, ymax = up, color = inside)) +
geom_hline(yintercept = d_hat, color = 'red') +
geom_vline(xintercept = c_i, color = 'green') +
geom_vline(xintercept = delta, color = 'black') +
geom_pointrange(size=0.3) +
labs(y = bquote('Mögliche'~delta), x = "Differenzen in der Stichprobe") +
scale_color_manual(values = c('red','blue')) +
scale_y_continuous(breaks = seq(-400,1100,100)) +
annotate("text", x=530,y=-300,label=expression(delta==500), size=4) +
#coord_flip() +
theme()
mu_s <- seq(-100, 800, length.out=25)
q_s <- qnorm(alpha, mu_s, s_e)
df <- tibble(mu_s = mu_s,
lu = qnorm(alpha/2,mu_s, s_e),
up = qnorm(1-alpha/2, mu_s, s_e)) %>%
dplyr::mutate(inside = dplyr::if_else(mu_s >= c_i[1] & mu_s <= c_i[2], 'yes', 'no'))
ggplot(df, aes(x = mu_s, y = mu_s, ymin = lu, ymax = up, color = inside)) +
geom_hline(yintercept = d_hat, color = 'red') +
geom_hline(yintercept = c_i, color = 'green') +
geom_vline(xintercept = delta, color = 'black') +
geom_pointrange(size=0.3) +
labs(y = bquote('Mögliche'~delta), x = "Differenzen in der Stichprobe") +
scale_color_manual(values = c('red','blue')) +
scale_y_continuous(breaks = seq(-400,1100,100)) +
annotate("text", x=530,y=-300,label=expression(delta==500), size=4) +
#coord_flip() +
theme()
c_i
mu_s <- seq(100, 700, length.out=25)
q_s <- qnorm(alpha, mu_s, s_e)
df <- tibble(mu_s = mu_s,
lu = qnorm(alpha/2,mu_s, s_e),
up = qnorm(1-alpha/2, mu_s, s_e)) %>%
dplyr::mutate(inside = dplyr::if_else(mu_s >= c_i[1] & mu_s <= c_i[2], 'yes', 'no'))
ggplot(df, aes(x = mu_s, y = mu_s, ymin = lu, ymax = up, color = inside)) +
geom_hline(yintercept = d_hat, color = 'red') +
geom_hline(yintercept = c_i, color = 'green') +
geom_vline(xintercept = delta, color = 'black') +
geom_pointrange(size=0.3) +
labs(y = bquote('Mögliche'~delta), x = "Differenzen in der Stichprobe") +
scale_color_manual(values = c('red','blue')) +
scale_y_continuous(breaks = seq(-400,1100,100)) +
annotate("text", x=530,y=-300,label=expression(delta==500), size=4) +
coord_flip() +
theme()
20/6**3
5/54
require(pwr)
?pwr.anova.test
pwr.anova.test(f = 0.25,power = 0.8, k = 4)
pwr.anova.test(f = 0.25,power = 0.8, k = 4, sig.level = 0.05)
fsqr_to_eta_sqr <- function(f_sqr) { f_sqr / (1 + f_sqr)}
fsqr_to_eta_sqr(c(0.05,0.1,0.15)**2)
1/50
foo <- function(k ) 4/(52-k+1)*prod(seq(48,48-k+2))/prod(seq(52-k+2))
foo(1:2)
foo(4)
foo(5)
seq(48,48-4+2)
prod(seq(48,48-4+2))
foo <- function(k ) 4/(52-k+1)*prod(seq(48,48-k+2))/prod(seq(52, 52-k+2))
foo(4)
1+3*(0:16)
foo(1+3*(0:16))
library(purrr)
apply(1+3*(0:16), foo)
?apply
map(1+3*(0:16), foo)
map_dbl(1+3*(0:16), foo)
sum(map_dbl(1+3*(0:16), foo))
sum(map_dbl(2+3*(0:15), foo))
sum(map_dbl(3+3*(0:15), foo))
x <- 1:7
y <- c(1,1,2,2,3,3,4)
mod <- lm(y~x)
summary(mod)
cov(x,y)
data(oats, packages = 'MASS')
data(oats, package = 'MASS')
library(lme4)
mod <- lmer(Y ~ B+ V*N + (1|B:V), data = oats)
anova(mod)
mod_2 <- aov(Y ~ B + V*N + Error(B:V), data = oats)
mod_2 <- aov(Y ~ B + V*N + Error(B), data = oats)
summary(mod_2)
oats
head(oats)
as_tibble(oats)
library(tidyverse)
as_tibble(oats)
summary(oats)
summary(aov(Y ~ B + V*N + Error(V), data = oats))
anova(mod)
summary(aov(Y ~ B + V*N + Error(B/V), data = oats))
vec <- c(0,1,1,1,0,0,1,1,0,0,0,0,1,1)
diff(vec)
vec <- c(0,2,2,2,0,0,2,2,0,0,0,0,2,2,0)
diff(vec)
find(d_vec == 2)
which(d_vec == 2)
d_vec <- diff(vec)
which(d_vec == 2)
which(d_vec == -2)
cbind(which(d_vec == 2), which(d_vec == -2))
seg_vec <- cbind(which(d_vec == 2), which(d_vec == -2))
seg_vec[,2] - seg_vec[,1]
vec
vec_raw <- c(1,NA,NA,NA,3,4,NA,NA,2,3,4,5,Na,NA,3)
vec <- is.na(vec_raw)
vec_raw <- c(1,NA,NA,NA,3,4,NA,NA,2,3,4,5,Na,NA,3)
vec_raw
vec_raw <- c(1,NA,NA,NA,3,4,NA,NA,2,3,4,5,NA,NA,3)
vec_raw
vec <- !is.na(vec_raw)
vec
vec <- !is.na(vec_raw)* 2
vec
vec <- numeric(!is.na(vec_raw)) * 2
vec
is.na(vec_raw)
as.numeric(is.na(vec_raw))
as.numeric(!is.na(vec_raw))
vec <- numeric(!is.na(vec_raw)) * 2
vec
vec_raw <- c(1,NA,NA,NA,3,4,NA,NA,2,3,4,5,NA,NA,3)
vec <- as.numeric(!is.na(vec_raw)) * 2
d_vec <- diff(vec)
seg_vec <- cbind(which(d_vec == 2), which(d_vec == -2))
seg_vec[,2] - seg_vec[,1]
vec <- as.numeric(is.na(vec_raw)) * 2
d_vec <- diff(vec)
seg_vec <- cbind(which(d_vec == 2), which(d_vec == -2))
seg_vec[,2] - seg_vec[,1]
vec
vec <- as.numeric(is.na(vec_raw))
d_vec <- diff(vec)
seg_vec <- cbind(which(d_vec == 2), which(d_vec == -2))
seg_vec[,2] - seg_vec[,1]
vec <- as.numeric(is.na(vec_raw)) * 2
d_vec <- diff(vec)
seg_vec <- cbind(which(d_vec == 2), which(d_vec == -2))
seg_vec[,2] - seg_vec[,1]
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
d_sum <- function(...) {
if (is.list(..1)) {
args <- ..1
}
else {
args <- list(...)
}
n_mats <- length(args)
n_row <- purrr::map_int(args, ~ dim(.x)[1])
n_col <- purrr::map_int(args, ~ dim(.x)[2])
res <- matrix(0, nr = sum(n_row), nc = sum(n_col))
purrr::iwalk(args, function(mat, idx) {
if(idx == 1)  {
res[1:n_row[idx], 1:n_col[idx]] <<- mat
}
else {
r_s <- sum(n_row[1:(idx-1)]) + 1
c_s <- sum(n_col[1:(idx-1)]) + 1
r_e <- r_s + n_row[idx] - 1
c_e <- c_s + n_col[idx] - 1
res[r_s:r_e, c_s:c_e] <<- mat
}
})
res
}
J_n <- function(n) matrix(1, nr=n, nc=n)
n_1 <- function(n) matrix(1, nr=n, nc=1)
m1 <- n_1(2)
m2 <- J_n(3)
d_sum(m1, m2)
X <- cbind(1,diag(2)%x%n_1(6),n_1(2)%x%(diag(2)%x%n_1(3)),n_1(4)%x%diag(3))
X
qr(X)$rank
quit('no')
mod_res <- lm(abs(e_res) ~ y_pred)
source("D:/sciebo/coding/rstats/regression_stories/misc.R", echo=TRUE)
plot(predict(mod_res))
mod_w <- lm(y ~ x, weight = 1/sqrt(predict(mod_res)))
y_pred_w <- predict(mod_w)
e_res_w <- resid(mod_w)
par(mfrow =c(1,2))
plot(y_pred, e_res, main = 'Standard')
plot(y_pred_w, e_res_w, main = 'Gewichtet')
summary(mod)
summary(mod_w)
source("D:/sciebo/coding/rstats/regression_stories/misc.R", echo=TRUE)
source("D:/sciebo/coding/rstats/regression_stories/misc.R", echo=TRUE)
source("D:/sciebo/coding/rstats/regression_stories/misc.R", echo=TRUE)
plot(1/predict(mod_res))
plot(1/predict(mod_res) ~ e_res)
require(tidyverse)
require(rstanarm)
require(bayesplot)
mesquite <- read_table('Mesquite/data/mesquite.dat')
summary(mesquite)
plot(mesquite$obs)
plot(mesquite$diam1)
plot(mesquite$diam1, mesquite$diam2)
require(patchwork)
p1 <- ggplot(mesquite, aes(diam1, diam2)) + geom_point()
p1 <- ggplot(mesquite, aes(diam1, diam2)) + geom_point()
p2 <- ggplot(mesquite, aes(total_height, canopy_height)) + geom_point()
(p1 + p2)
p1 <- ggplot(mesquite, aes(diam1, diam2)) + geom_point()
p2 <- ggplot(mesquite, aes(total_height, canopy_height)) + geom_point()
p3 <- ggplot(mesquite, aes(density, diam2)) + geom_point()
(p1 + p2 + p3)
p1 <- ggplot(mesquite, aes(diam1, diam2)) + geom_point()
p2 <- ggplot(mesquite, aes(total_height, canopy_height)) + geom_point()
p3 <- ggplot(mesquite, aes(density, group)) + geom_point()
(p1 + p2 + p3)
p1 <- ggplot(mesquite, aes(diam1, diam2)) + geom_point()
p2 <- ggplot(mesquite, aes(total_height, canopy_height)) + geom_point()
p3 <- ggplot(mesquite, aes(group, density)) + geom_boxplot()
(p1 + p2 + p3)
table(mesquite$group)
p1 <- ggplot(mesquite, aes(diam1, diam2)) + geom_point()
p2 <- ggplot(mesquite, aes(total_height, canopy_height)) + geom_point()
p3 <- ggplot(mesquite, aes(group, weight)) + geom_boxplot()
(p1 + p2 + p3)
fit_1 <- stan_glm(weight ~ diam1 + diamg2 + canopy_height + total_height + density + group,
data = mesquite, refresh = 0)
fit_1 <- stan_glm(weight ~ diam1 + diam2 + canopy_height + total_height + density + group,
data = mesquite, refresh = 0)
print(fit_1)
(loo_1 <- loo(fit_1))
(kfold_1 <- kfold(fit_1, K=10))
require(summarytools)
descr(mesquite, stats = c('min','q25','med','q75','max','iqr'), transpose =T)
descr(mesquite)
descr(mesquite, stats = c('min','Q1','med','Q3','max','IQR'), transpose =T)
?descr
fit_2 <- stan_glm(log(weight) ~ log(diam1) + log(diam2) + log(canopy_height) +
log(total_height) + log(density) + group, data = mesquite, refresh = 0)
print(fit_2)
(loo_2 <- loo(fit_2))
yrep_1 <- posterior_predict(fit_1)
n_sims <- nrow(yrep_1)
subset <- suample(n_sim, 100)
subset <- sample(n_sim, 100)
subset <- sample(n_sims, 100)
ppc_dens_overlay(mesquite$weight, yrep_1[subset,])
yrep_1 <- posterior_predict(fit_1)
n_sims <- nrow(yrep_1)
subset <- sample(n_sims, 100)
p1 <- ppc_dens_overlay(mesquite$weight, yrep_1[subset,])
yrep_2 <- posterior_predict(fit_2)
p2 <- ppc_dens_overlay(log(mesquite$weight), yrep_2[subset,])
(p1 + p2)
X <- matrix(c(1,1,1,1,1,0,1,0,1,0,0,1,0,1,0), nr=3)
X
X_inv <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,-1,2,0,0,0,0,0,1), nr=5)
X_inv
XX <- t(X) %*% X
cc <- c(1,0,1,0,1)
cc %*% X_inv %*% t(X)
X <- matrix(c(7,-2,-5,-2,3,1,-5,-1,6))
y <- c(17,34,-51)
solve(t(X)%*%X, t(X)%*%y)
X
X <- matrix(c(7,-2,-5,-2,3,1,-5,-1,6), nr=3)
X
solve(t(X)%*%X, t(X)%*%y)
round(solve(t(X)%*%X, t(X)%*%y),4)
0.31 - 0.27
0.04/0.06
library(shiny); runApp('D:/sciebo/work/teaching/ADVST/shiny/shiny_type_3.R')
install.packages(c("bayesplot", "broom", "car", "emmeans", "estimability", "haven", "knitr", "lobstr", "metafor", "mnormt", "multcomp", "openssl", "readxl", "rlang", "scales", "shinystan"))
n <- 20
library(MASS)
mvrnorm(20, c(10, 15), 2)
mvrnorm(20, c(10, 15), c(2,2))
?mvrnorm
sigma <- matrix(c(10,3,3,2),2,2)
sigma
rs <- mvrnorm(20, c(10,15), sigma)
rs
var(rs)
sigma
corr(rs)
cor(rs)
d_hat <- d[,1]-d[,2]
d_hat <- mean(r_s[,1]-r_s[,2])
d_hat <- mean(rs[,1]-rs[,2])
d_hat
d_i <- rs[,1] - rs[,2]
sd(d_i)
sd_s <- apply(rs, 2, sd)
sd_s
sum(sd_2**2) - 2 *mult(sd_s)*0.75
sum(sd_s**2) - 2 *mult(sd_s)*0.75
sum(sd_s**2) - 2 * prod(sd_s)*0.75
sqrt(sum(sd_s**2) - 2 * prod(sd_s)*0.75)
sqrt(sum(sd_s**2) - 2 * prod(sd_s)* corr(rs[,1], rs[,2]))
sqrt(sum(sd_s**2) - 2 * prod(sd_s)* cor(rs[,1], rs[,2]))
sqrt((8*16 + 8*17)/14)
x <- seq(-4,4,0.01)
y <- dnorm(x, 0, 4.34)
plot(x,y)
plot(x,y,'l')
plot(x, dnorm(x, mu_1, sigma_1), 'l')
mu_1 <- 107
sigma_1 <- 47
x <- seq(50, 200, 0.1)
plot(x, dnorm(x, mu_1, sigma_1), 'l')
x <- seq(0, 200, 0.1)
plot(x, dnorm(x, mu_1, sigma_1), 'l')
qnorm(c(0.05, 0.95), mu_1, sigma_1)
qnorm(c(0.05, 0.95), mu_1, sigma_1)
library(stanarm)
library(tidyverse)
dat <- tibble(
id = paste0('P', 1:n),
t_0 = norm(n, 300, 30),
pre = t_0 + rnorm(n, 107, 30),
post = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
)
n <- 20
dat <- tibble(
id = paste0('P', 1:n),
t_0 = norm(n, 300, 30),
pre = t_0 + rnorm(n, 107, 30),
post = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
)
dat <- tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
pre = t_0 + rnorm(n, 107, 30),
post = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
)
dat
tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
pre = t_0 + rnorm(n, 107, 30),
post = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
) |> select(-t_0) |> pivot_longer(-id, names_to = 'time', value_to = 'performance')
tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
pre = t_0 + rnorm(n, 107, 30),
post = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
) |> select(-t_0) |> pivot_longer(-id, names_to = 'time', values_to = 'performance')
dat <- tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
pre = t_0 + rnorm(n, 107, 30),
post = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
) |> select(-t_0) |> pivot_longer(-id, names_to = 'time', values_to = 'performance')
ggplot(dat, aes(time, performance, group=id)) +
geom_point() + geom_line()
dat <- tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
time_0 = t_0 + rnorm(n, 107, 30),
time_1 = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
) |> select(-t_0) |> pivot_longer(-id, names_to = 'time', values_to = 'performance')
ggplot(dat, aes(time, performance, group=id)) +
geom_point() + geom_line()
n <- 20
dat <- tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
time_0 = t_0 + rnorm(n, 10, 30),
time_1 = t_0 + rnorm(n, 10, 30) + runif(n, 0, 20)
) |> select(-t_0) |> pivot_longer(-id, names_to = 'time', values_to = 'performance')
ggplot(dat, aes(time, performance, group=id)) +
geom_point() + geom_line()
mod <- stan_glm(peformance ~ time, data = dat)
library(stanarm)
library(rstanarm)
mod <- stan_glm(peformance ~ time, data = dat)
mod <- stan_glm(performance ~ time, data = dat)
summary(mod)
print(mod)
dat
mod <- stan_lmer(performance ~ time + (1|id), data = dat)
summary(mod)
print(mod)
n <- 20
dat <- tibble(
id = paste0('P', 1:n),
t_0 = rnorm(n, 300, 30),
time_0 = t_0 + rnorm(n, 0, 5),
time_1 = t_0 + rnorm(n, 0, 5) + runif(n, 0, 20)
) |> select(-t_0) |> pivot_longer(-id, names_to = 'time', values_to = 'performance')
ggplot(dat, aes(time, performance, group=id)) +
geom_point() + geom_line()
mod <- stan_lmer(performance ~ time + (1|id), data = dat)
print(mod)
library(tidyverse)
mcgj <- tibble(
mother = c(103,82,116,102,99,98,104,62,97,107),
child = c(19,65,106,102,105,100,107,85,101,110)
)
summary(mgcj)
summary(mcgj)
mcgj <- tibble(
mother = c(103,82,116,102,99,98,104,62,97,107),
child = c(119,65,106,102,105,100,107,85,101,110)
)
summary(mcgj)
require(lme4)
with(mcgj, cor(mother, child))
library(psych)
install.packages('psych')
require(psycho)
require(psych)
?icc
?ICC
ICC(mgcj)
ICC(mcgj)
mc <- tibble(
mother = c(103,82,116,102,99,98,104,62,97,107),
child = c(119,65,106,102,105,100,107,85,101,110)
)
summary(mc)
mc |> rowid_to_column('id') |>
mutate(id = paste0('S',id))
mc |> rowid_to_column('id') |>
mutate(id = paste0('S',id)) |>
pivot_longer(-id)
mc_l <- mc |> rowid_to_column('id') |>
mutate(id = paste0('S',id)) |>
pivot_longer(-id)
mc_l
mod <- lmer(value ~ name + (1|id:name), mc_l)
mod <- lmer(value ~ name + (1|id), mc_l)
summary(mod)
mod <- avo(value ~ name + Erro(id), mc_l)
summary(mod)
mod <- aov(value ~ name + Erro(id), mc_l)
mod <- aov(value ~ name + Error(id), mc_l)
summary(mod)
dim(mc)
(385.9 - 64.33)/(385.9 + 9*64.3 + (2/10)*(45 - 64.33))
mod <- aov(value ~ name + Error(name/id), mc_l)
summary(mod)
mod <- aov(value ~ name + Error(id), mc_l)
summary(mod)
dat <- read_delim('../data/lilquist_2021_tbl_05.txt',
delim = ' ')
dat <- read_delim('../data/lilquist_2021_tbl_05.txt',
delim = ' ')
glimpse(dat)
dat <- dat |> mutate(Subject = paste0('S', Subject))
glimpse(dat)
dat |> pivot_longer(-Subject)
dat_l <- dat |> pivot_longer(-Subject)
dat_l
summary(aov(value ~ name + Error(Subject), dat_l))
summary(aov(value ~ name*Subject + Error(Subject), dat_l))
summary(aov(value ~ name + Error(Subject), dat_l))
summary(aov(value ~ name + Subject, dat_l))
summary(aov(value ~ name * Subject, dat_l))
summary(aov(value ~ name + Subject, dat_l))
ssbm <- 39.15
sse <- 24.45
ssws <- ssbm + sse
dim(dat)
msws <- ssws/(10)
msws
ssbm <- 78.3
sse <- 440.1
ssws <- ssbm + sse
ssws
msws <- ssws/(10)
msws
msws <- ssws/(10*2)
msws
dat
n <- nrow(dat)
k <- ncol(dat)
ssbm <- 78.3
sse <- 440.1
ssws <- ssbm + sse
msws <- ssws/(n*(k-1))
msws
ssws
k
k <- ncol(dat) - 1
msws <- ssws/(n*(k-1))
msws
summary(aov(value ~ Subject + Error(name), dat_l))
summary(aov(value ~ Subject + name, dat_l))
212.61 + 39.15 + 24.45
1913.5 + 78.3 + 440.1
sum( (dat_l$value - mean(dat_l$value))**2 )
3/0.5
1/9.9
sqrt(100/2*2.33**2 - 4.1**2)
sqrt(100/2*1.28**2 - 4.1**2)
10**2/2*1.28**2 - 4-1**2
sqrt(10**2/2*1.28**2 - 4-1**2)
sqrt(16.7**2/2*2.33**2 - 4.4**2)
sqrt((16.7**2/2*2.33**2)- 4.4**2)
sqrt(((16.7**2)/2*2.33**2)- 4.4**2)
sqrt(16.7**2/(2*2.33**2)-4.4**2)
44/265
50/70
20/70
setwd("D:/coding/rstats/ltc")
setwd("D:/coding/rstats")
setwd("D:/coding/rstats/LTC")
